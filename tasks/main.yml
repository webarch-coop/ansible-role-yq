---
- name: Install or upgrade yq
  block:

    - name: Include local facts tasks
      include_tasks: local_facts.yml

    - name: Which yq
      ansible.builtin.command: which yq
      check_mode: false
      changed_when: false
      register: yq_which
      failed_when: yq_which.rc is not regex('^0|1$')

    - name: Check the yq version
      block:

        - name: Check the yq version
          ansible.builtin.command: yq -V
          check_mode: false
          changed_when: false
          register: yq_v
    
        - name: Set a fact for the existing version information
          ansible.builtin.set_fact:
            yq_existing: "{{ yq_v.split(' ')[3] | trim | string }}"
    
        - name: Debug the existing version and variable type
          ansible.builtin.debug:
            msg:
              - "variable value {{ yq_existing }}"
              - "variable type {{ yq_existing | type_debug }}"
            verbosity: 2

      when: jc_which.rc == 0

    - name: Find the latest version of yq
      block:

        - name: Use a HEAD request to get the latest redirect URL
          ansible.builtin.uri:
            url: https://github.com/mikefarah/yq/releases/latest
            method: HEAD
            status_code: 302
            follow_redirects: none
          check_mode: false
          changed_when: false
          register: yq_latest_headers

        - name: Set a fact for the latest version of yq
          ansible.builtin.set_fact:
            yq_proposed: "{{ yq_latest_headers.location | urlsplit('path') | basename | regex_replace('^v') | string }}"

      when: yq_version == "latest"

    - name: Set a fact for the proposed version of yq when not latest
      ansible.builtin.set_fact:
        yq_proposed: "{{ yq_version | string }}"
      when: ( yq_proposed is not defined ) or ( yq_proposed != "latest" )

    - name: Download yq   
      get_url:
        url: "https://github.com/mikefarah/yq/releases/download/v{{ yq_proposed }}/yq_linux_{{ ansible_local.dpkg_arch.arch }}"
        dest: "/root/yq_linux_{{ ansible_local.dpkg_arch.arch }}"
        mode: 0700
        owner: root
        group: root
      register: yq_download

    - name: Copy yq into place
      copy:
        src: "/root/yq_linux_{{ ansible_local.dpkg_arch.arch }}"
        dest: /usr/local/bin/yq
        remote_src: true
        mode: 0755
        owner: root
        group: root
        validate: %s -V

  when: yq
  tags:
    - yq
...
